{"version":3,"sources":["pages/login/style.js","pages/login/index.js"],"names":["LoginWrapper","styled","div","LoginBox","Input","input","Button","Alert","p","connect","state","accountList","getIn","alert","loginStatus","dispatch","login","accountElement","passwordElement","actionCreators","loginAction","current","value","initializeAccountList","initializeAccountListAction","props","accountRef","useRef","passwordRef","useEffect","to","placeholder","ref","type","onClick","className"],"mappings":"sIAEaA,EAAeC,IAAOC,IAAV,4IAUZC,EAAWF,IAAOC,IAAV,2KAQRE,EAAQH,IAAOI,MAAV,iKAULC,EAASL,IAAOC,IAAV,iMAWNK,EAAQN,IAAOO,EAAV,6H,qCCiBHC,uBAtBE,SAACC,GAAD,MAAY,CAC3BC,YAAaD,EAAME,MAAM,CAAC,QAAS,gBACnCC,MAAOH,EAAME,MAAM,CAAC,QAAS,UAC7BE,YAAaJ,EAAME,MAAM,CAAC,QAAS,cAGjB,SAACG,GAAD,MAAe,CACjCC,MADiC,SAC3BC,EAAgBC,EAAiBP,GACrCI,EACEI,IAAeC,YACbH,EAAeI,QAAQC,MACvBJ,EAAgBG,QAAQC,MACxBX,KAKNY,sBAXiC,WAY/BR,EAASI,IAAeK,iCAIbf,EAnDD,SAACgB,GACb,IAAQT,EACNS,EADMT,MAAOL,EACbc,EADad,YAAaY,EAC1BE,EAD0BF,sBAAuBV,EACjDY,EADiDZ,MAAOC,EACxDW,EADwDX,YAEpDY,EAAaC,iBAAO,MACpBC,EAAcD,iBAAO,MAK3B,OAJAE,qBAAU,WACRN,MACC,IAECT,EACK,cAAC,IAAD,CAAUgB,GAAG,MAGlB,cAAC9B,EAAD,UACE,eAACG,EAAD,WACE,cAACC,EAAD,CAAO2B,YAAY,UAAUC,IAAKN,IAClC,cAACtB,EAAD,CAAO2B,YAAY,WAAWE,KAAK,WAAWD,IAAKJ,IACnD,cAACtB,EAAD,CAAQ4B,QAAS,kBAAMlB,EAAMU,EAAYE,EAAajB,IAAtD,mBAGA,eAACJ,EAAD,CAAO4B,UAAWtB,EAAQ,GAAK,OAA/B,+CACqC","file":"static/js/5.da186001.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LoginWrapper = styled.div`\r\n  z-index: 0;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 56px;\r\n  background: #eee;\r\n`;\r\n\r\nexport const LoginBox = styled.div`\r\n  width: 400px;\r\n  height: 220px;\r\n  margin: 80px auto;\r\n  background: #fff;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n  padding-top: 20px;\r\n`;\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 200px;\r\n  height: 20px;\r\n  line-height: 30px;\r\n  padding: 0 10px;\r\n  margin: 10px auto;\r\n  color: #777;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  width: 220px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  color: #fff;\r\n  background: #3194d0;\r\n  border-radius: 15px;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Alert = styled.p`\r\n  color: red;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n  &.hide {\r\n    display: none;\r\n  }\r\n`;\r\n","import { LoginWrapper, LoginBox, Input, Button, Alert } from \"./style\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { actionCreators } from \"./store\";\r\nimport { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const { login, accountList, initializeAccountList, alert, loginStatus } =\r\n    props;\r\n  const accountRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  useEffect(() => {\r\n    initializeAccountList();\r\n  }, []);\r\n\r\n  if (loginStatus) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <LoginWrapper>\r\n        <LoginBox>\r\n          <Input placeholder=\"Account\" ref={accountRef} />\r\n          <Input placeholder=\"Password\" type=\"password\" ref={passwordRef} />\r\n          <Button onClick={() => login(accountRef, passwordRef, accountList)}>\r\n            Login\r\n          </Button>\r\n          <Alert className={alert ? \"\" : \"hide\"}>\r\n            Username or password is incorrect!{\" \"}\r\n          </Alert>\r\n        </LoginBox>\r\n      </LoginWrapper>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  accountList: state.getIn([\"login\", \"accountList\"]),\r\n  alert: state.getIn([\"login\", \"alert\"]),\r\n  loginStatus: state.getIn([\"login\", \"login\"]),\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  login(accountElement, passwordElement, accountList) {\r\n    dispatch(\r\n      actionCreators.loginAction(\r\n        accountElement.current.value,\r\n        passwordElement.current.value,\r\n        accountList\r\n      )\r\n    );\r\n  },\r\n\r\n  initializeAccountList() {\r\n    dispatch(actionCreators.initializeAccountListAction);\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Login);\r\n"],"sourceRoot":""}